定义:指一个类只有一个实例，且该类能自行创建这个实例的一种模式。例如，Windows 中只能打开一个任务管理器，这样可以避免因打开多个任务管理器窗口而造成内存资源的浪费，或出现各个窗口显示内容的不一致等错误。
单例模式有 3 个特点：
    1.单例类只有一个实例对象；
    2.该单例对象必须由单例类自行创建；
    3.单例类对外提供一个访问该单例的全局访问点。
单例模式的优点：
    1.单例模式可以保证内存里只有一个实例，减少了内存的开销。
    2.可以避免对资源的多重占用。
    3.单例模式设置全局访问点，可以优化和共享资源的访问。

单例模式的缺点：
    1.单例模式一般没有接口，扩展困难。如果要扩展，则除了修改原来的代码，没有第二种途径，违背开闭原则。
    2.在并发测试中，单例模式不利于代码调试。在调试过程中，如果单例中的代码没有执行完，也不能模拟生成一个新的对象。
    3.单例模式的功能代码通常写在一个类中，如果功能设计不合理，则很容易违背单一职责原则。

单例模式的实现思路：
    单例模式是设计模式中最简单的模式之一。
    通常，普通类的构造函数是公有的，外部类可以通过“new 构造函数()”来生成多个实例。
    但是，如果将类的构造函数设为私有的，外部类就无法调用该构造函数，也就无法生成多个实例。
    这时该类自身必须定义一个静态私有实例，并向外提供一个静态的公有函数用于创建或获取该静态私有实例。

单例分为：
    饿汉，懒汉